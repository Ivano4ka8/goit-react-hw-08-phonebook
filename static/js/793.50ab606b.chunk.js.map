{"version":3,"file":"static/js/793.50ab606b.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/frameloop/render-step.mjs","../node_modules/framer-motion/dist/es/frameloop/batcher.mjs","../node_modules/framer-motion/dist/es/frameloop/frame.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/utils/errors.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/utils/memo.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/animators/instant.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/debug/record.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs"],"sourcesContent":["import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const canHandoff = useRef(Boolean(window.HandoffAppearAnimations));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.render();\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (canHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.updateFeatures();\n        if (!canHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        /**\n         * Once we've handed off animations we can delete HandoffAppearAnimations\n         * so components added after the initial render can animate changes\n         * in useEffect vs useLayoutEffect.\n         */\n        window.HandoffAppearAnimations = undefined;\n        canHandoff.current = false;\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\nconst cssVariableRegex = /var\\s*\\(\\s*--[\\w-]+(\\s*,\\s*(?:(?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)+)?\\s*\\)/g;\n\nexport { cssVariableRegex, isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","const noop = (any) => any;\n\nexport { noop };\n","class Queue {\n    constructor() {\n        this.order = [];\n        this.scheduled = new Set();\n    }\n    add(process) {\n        if (!this.scheduled.has(process)) {\n            this.scheduled.add(process);\n            this.order.push(process);\n            return true;\n        }\n    }\n    remove(process) {\n        const index = this.order.indexOf(process);\n        if (index !== -1) {\n            this.order.splice(index, 1);\n            this.scheduled.delete(process);\n        }\n    }\n    clear() {\n        this.order.length = 0;\n        this.scheduled.clear();\n    }\n}\nfunction createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Queue();\n    let nextFrame = new Queue();\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (queue.add(callback) && addToCurrentFrame && isProcessing) {\n                // If we're adding it to the currently running queue, update its measured size\n                numToRun = thisFrame.order.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.remove(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Clear the next frame queue\n            nextFrame.clear();\n            // Execute this frame\n            numToRun = thisFrame.order.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = thisFrame.order[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"prepare\",\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0,\n        timestamp: 0,\n        isProcessing: false,\n    };\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(() => (runNextFrame = true));\n        return acc;\n    }, {});\n    const processStep = (stepId) => steps[stepId].process(state);\n    const processBatch = () => {\n        const timestamp = performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        stepsOrder.forEach(processStep);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => stepsOrder.forEach((key) => steps[key].cancel(process));\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","import { noop } from '../utils/noop.mjs';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, steps };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            frame.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            this.removeEndListeners();\n            if (this.isPressing)\n                return;\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel } = this.node.getProps();\n                frame.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { cssVariableRegex } from '../../../render/dom/utils/is-css-variable.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { colorRegex, floatRegex, isString, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst cssVarTokeniser = {\n    regex: cssVariableRegex,\n    countKey: \"Vars\",\n    token: \"${v}\",\n    parse: noop,\n};\nconst colorTokeniser = {\n    regex: colorRegex,\n    countKey: \"Colors\",\n    token: \"${c}\",\n    parse: color.parse,\n};\nconst numberTokeniser = {\n    regex: floatRegex,\n    countKey: \"Numbers\",\n    token: \"${n}\",\n    parse: number.parse,\n};\nfunction tokenise(info, { regex, countKey, token, parse }) {\n    const matches = info.tokenised.match(regex);\n    if (!matches)\n        return;\n    info[\"num\" + countKey] = matches.length;\n    info.tokenised = info.tokenised.replace(regex, token);\n    info.values.push(...matches.map(parse));\n}\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const info = {\n        value: originalValue,\n        tokenised: originalValue,\n        values: [],\n        numVars: 0,\n        numColors: 0,\n        numNumbers: 0,\n    };\n    if (info.value.includes(\"var(--\"))\n        tokenise(info, cssVarTokeniser);\n    tokenise(info, colorTokeniser);\n    tokenise(info, numberTokeniser);\n    return info;\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, numVars, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            if (i < numVars) {\n                output = output.replace(cssVarTokeniser.token, v[i]);\n            }\n            else if (i < numVars + numColors) {\n                output = output.replace(colorTokeniser.token, color.transform(v[i]));\n            }\n            else {\n                output = output.replace(numberTokeniser.token, sanitize(v[i]));\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nconst mixImmediate = (origin, target) => (p) => `${p > 0 ? target : origin}`;\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return origin.startsWith(\"var(\")\n            ? mixImmediate(origin, target)\n            : mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numVars === targetStats.numVars &&\n        originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        return color.test(v) ? mixColor : mixComplex;\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    const initialVelocity = velocity ? -millisecondsToSeconds(velocity) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => frameData.isProcessing ? frameData.timestamp : performance.now(),\n    };\n};\n\nexport { frameloopDriver };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { keyframes } from '../../generators/keyframes.mjs';\nimport { spring } from '../../generators/spring/index.mjs';\nimport { inertia } from '../../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { interpolate } from '../../../utils/interpolate.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorDuration } from '../../generators/utils/calc-duration.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\n/**\n * Animate a single value on the main thread.\n *\n * This function is written, where functionality overlaps,\n * to be largely spec-compliant with WAAPI to allow fungibility\n * between the two.\n */\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let speed = 1;\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     * TODO: Support velocity for units and complex value types/\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        mapNumbersToKeyframes = interpolate([0, 100], keyframes$1, {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    let cancelTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calcGeneratorDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration !== null) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let currentTime = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (speed > 0)\n            startTime = Math.min(startTime, timestamp);\n        if (speed < 0)\n            startTime = Math.min(timestamp - totalDuration / speed, startTime);\n        if (holdTime !== null) {\n            currentTime = holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            currentTime = Math.round(timestamp - startTime) * speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = currentTime - delay * (speed >= 0 ? 1 : -1);\n        const isInDelayPhase = speed >= 0 ? timeWithoutDelay < 0 : timeWithoutDelay > totalDuration;\n        currentTime = Math.max(timeWithoutDelay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            currentTime = totalDuration;\n        }\n        let elapsed = currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = currentTime / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const iterationIsOdd = Boolean(currentIteration % 2);\n            if (iterationIsOdd) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            let p = clamp(0, 1, iterationProgress);\n            if (currentTime > totalDuration) {\n                p = repeatType === \"reverse\" && iterationIsOdd ? 1 : 0;\n            }\n            elapsed = p * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes$1[0] }\n            : frameGenerator.next(elapsed);\n        if (mapNumbersToKeyframes) {\n            state.value = mapNumbersToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done = speed >= 0 ? currentTime >= totalDuration : currentTime <= 0;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" || (playState === \"running\" && done));\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            finish();\n        }\n        return state;\n    };\n    const stopAnimationDriver = () => {\n        animationDriver && animationDriver.stop();\n        animationDriver = undefined;\n    };\n    const cancel = () => {\n        playState = \"idle\";\n        stopAnimationDriver();\n        resolveFinishedPromise();\n        updateFinishedPromise();\n        startTime = cancelTime = null;\n    };\n    const finish = () => {\n        playState = \"finished\";\n        onComplete && onComplete();\n        stopAnimationDriver();\n        resolveFinishedPromise();\n    };\n    const play = () => {\n        if (hasStopped)\n            return;\n        if (!animationDriver)\n            animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime || playState === \"finished\") {\n            startTime = now;\n        }\n        if (playState === \"finished\") {\n            updateFinishedPromise();\n        }\n        cancelTime = startTime;\n        holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        playState = \"running\";\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(currentTime);\n        },\n        set time(newTime) {\n            newTime = secondsToMilliseconds(newTime);\n            currentTime = newTime;\n            if (holdTime !== null || !animationDriver || speed === 0) {\n                holdTime = newTime;\n            }\n            else {\n                startTime = animationDriver.now() - newTime / speed;\n            }\n        },\n        get duration() {\n            const duration = generator.calculatedDuration === null\n                ? calcGeneratorDuration(generator)\n                : generator.calculatedDuration;\n            return millisecondsToSeconds(duration);\n        },\n        get speed() {\n            return speed;\n        },\n        set speed(newSpeed) {\n            if (newSpeed === speed || !animationDriver)\n                return;\n            speed = newSpeed;\n            controls.time = millisecondsToSeconds(currentTime);\n        },\n        get state() {\n            return playState;\n        },\n        play,\n        pause: () => {\n            playState = \"paused\";\n            holdTime = currentTime;\n        },\n        stop: () => {\n            hasStopped = true;\n            if (playState === \"idle\")\n                return;\n            playState = \"idle\";\n            onStop && onStop();\n            cancel();\n        },\n        cancel: () => {\n            if (cancelTime !== null)\n                tick(cancelTime);\n            cancel();\n        },\n        complete: () => {\n            playState = \"finished\";\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { memo } from '../../../utils/memo.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { frameData, frame, cancelFrame } from '../../../frameloop/frame.mjs';\n\nconst supportsWaapi = memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supportsWaapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease, times } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        times = undefined;\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n        times,\n    });\n    /**\n     * WAAPI animations don't resolve startTime synchronously. But a blocked\n     * thread could delay the startTime resolution by a noticeable amount.\n     * For synching handoff animations with the new Motion animation we want\n     * to ensure startTime is synchronously set.\n     */\n    if (options.syncStart) {\n        animation.startTime = frameData.isProcessing\n            ? frameData.timestamp\n            : document.timeline\n                ? document.timeline.currentTime\n                : performance.now();\n    }\n    const cancelAnimation = () => animation.cancel();\n    const safeCancel = () => {\n        frame.update(cancelAnimation);\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n        safeCancel();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        attachTimeline(timeline) {\n            animation.timeline = timeline;\n            animation.onfinish = null;\n            return noop;\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        get speed() {\n            return animation.playbackRate;\n        },\n        set speed(newSpeed) {\n            animation.playbackRate = newSpeed;\n        },\n        get duration() {\n            return millisecondsToSeconds(duration);\n        },\n        play: () => {\n            if (hasStopped)\n                return;\n            animation.play();\n            /**\n             * Cancel any pending cancel tasks\n             */\n            cancelFrame(cancelAnimation);\n        },\n        pause: () => animation.pause(),\n        stop: () => {\n            hasStopped = true;\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            safeCancel();\n        },\n        complete: () => animation.finish(),\n        cancel: safeCancel,\n    };\n    return controls;\n}\n\nexport { createAcceleratedAnimation };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        /**\n         * TODO: As this API grows it could make sense to always return\n         * animateValue. This will be a bigger project as animateValue\n         * is frame-locked whereas this function resolves instantly.\n         * This is a behavioural change and also has ramifications regarding\n         * assumptions within tests.\n         */\n        return {\n            time: 0,\n            speed: 1,\n            duration: 0,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n            cancel: (noop),\n            complete: (noop),\n        };\n    };\n    return delay\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: 0,\n            delay,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n}\n\nexport { isNone };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isNone } from './is-none.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let keyframes;\n    if (Array.isArray(target)) {\n        keyframes = [...target];\n    }\n    else {\n        keyframes = [null, target];\n    }\n    const defaultOrigin = transition.from !== undefined ? transition.from : value.get();\n    let animatableTemplateValue = undefined;\n    const noneKeyframeIndexes = [];\n    for (let i = 0; i < keyframes.length; i++) {\n        /**\n         * Fill null/wildcard keyframes\n         */\n        if (keyframes[i] === null) {\n            keyframes[i] = i === 0 ? defaultOrigin : keyframes[i - 1];\n        }\n        if (isNone(keyframes[i])) {\n            noneKeyframeIndexes.push(i);\n        }\n        // TODO: Clean this conditional, it works for now\n        if (typeof keyframes[i] === \"string\" &&\n            keyframes[i] !== \"none\" &&\n            keyframes[i] !== \"0\") {\n            animatableTemplateValue = keyframes[i];\n        }\n    }\n    if (isTargetAnimatable &&\n        noneKeyframeIndexes.length &&\n        animatableTemplateValue) {\n        for (let i = 0; i < noneKeyframeIndexes.length; i++) {\n            const index = noneKeyframeIndexes[i];\n            keyframes[index] = getAnimatableNone(valueName, animatableTemplateValue);\n        }\n    }\n    return keyframes;\n}\n\nexport { getKeyframes };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, isTransitionDefined };\n","import { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ease: \"easeOut\",\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(instantAnimationState.current\n                ? { ...options, delay: 0 }\n                : options);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { animateMotionValue };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { frame, frameData } from '../frameloop/frame.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"10.16.4\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                frame.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => frame.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            elapsed: 0,\n            ...transition,\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n                valueTransition.syncStart = true;\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        const animation = value.animation;\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            transitionEnd && setTarget(visualElement, transitionEnd);\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\n\nexport { animateVisualElement };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.update(() => onDragStart(event, info), false, true);\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), { transformPagePoint: this.node.getTransformPagePoint() });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            queueMicrotask(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction boxEqualsRounded(a, b) {\n    return (Math.round(a.x.min) === Math.round(b.x.min) &&\n        Math.round(a.x.max) === Math.round(b.x.max) &&\n        Math.round(a.y.min) === Math.round(b.y.min) &&\n        Math.round(a.y.max) === Math.round(b.y.max));\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEqualsRounded, isDeltaZero, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, steps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = performance.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                queueMicrotask(() => this.update());\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            frame.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionDelta = createDelta();\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        if (!transitionEnd)\n            transitionEnd = {};\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { parseCSSVariable, resolveCSSVariables };\n","export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure \" + obj);\n}","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                /**\n                 * Don't allow wildcard keyframes to be used to detect\n                 * a difference in value types.\n                 */\n                if (to[i] === null)\n                    break;\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                frame.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update();\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        var _a;\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.16.4\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.16.4 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n"],"names":["MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","PresenceContext","isBrowser","document","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","LazyContext","strict","isRefObject","ref","Object","prototype","hasOwnProperty","call","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","concat","isControllingVariants","props","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","_getCurrentTreeVarian","context","initial","undefined","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","_loop","key","isEnabled","LayoutGroupContext","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","_ref","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","_objectSpread","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","visualState","visualElement","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","current","blockInitialAnimation","useInsertionEffect","update","canHandoff","window","HandoffAppearAnimations","render","animationState","animateChanges","updateFeatures","useVisualElement","initialLayoutGroupConfig","isStrict","React","Provider","value","useCallback","instance","mount","unmount","useMotionRef","_ref2","layoutGroupId","id","createMotionProxy","createConfig","custom","customMotionComponentConfig","arguments","length","Proxy","componentCache","Map","get","_target","has","set","lowercaseSVGElements","isSVGComponent","includes","indexOf","test","scaleCorrectors","transformPropOrder","transformProps","Set","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","checkStringStartsWith","token","isCSSVariableName","isCSSVariableToken","getValueAsType","type","transform","clamp","min","max","Math","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","options","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","transformIsDefault","_ref$enableHardwareAc","enableHardwareAcceleration","_ref$allowTransformNo","allowTransformNone","transformString","i","trim","buildTransform","_transformOrigin$orig","_transformOrigin$orig2","_transformOrigin$orig3","createHtmlRenderState","copyRawValuesOnly","target","source","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","isValidProp","shouldForward","require","_a","filterProps","isDom","forwardMotionProps","filteredProps","values","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","_ref$pathSpacing","pathSpacing","_ref$pathOffset","pathOffset","_objectWithoutProperties","_excluded","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","elementProps","children","renderedChildren","createElement","camelToDash","str","replace","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","scrapeMotionValuesFromProps$1","charAt","toUpperCase","substring","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","resolveMotionValue","unwrappedValue","mix","toValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","init","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","forEach","resolved","transitionEnd","transition","valueTarget","noop","any","Queue","_classCallCheck","this","order","scheduled","_createClass","process","add","push","index","splice","delete","clear","stepsOrder","_createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","delta","timestamp","isProcessing","steps","reduce","acc","thisFrame","nextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","callback","addToCurrentFrame","queue","cancel","remove","frameData","createRenderStep","processStep","stepId","processBatch","performance","now","wake","keepAlive","immediate","createRenderBatcher","requestAnimationFrame","frame","cancelFrame","svgMotionConfig","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerEvent","addPointerInfo","combineFunctions","a","b","pipe","_len","transformers","_key","createLock","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","isMounted","addHoverEvent","isActive","callbackName","info","getProps","whileHover","setActive","HoverGesture","_Feature","_inherits","_super","_createSuper","apply","FocusGesture","_this","isFocusVisible","matches","_this2","onFocus","onBlur","isNodeOrChild","child","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","PressGesture","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","_this$node$getProps","onTapCancel","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","_this$node$getProps3","removePointerListener","removeFocusListener","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","all","InViewFeature","hasEnteredView","isInView","_this$node$getProps$v","viewport","rootMargin","_viewport$amount","amount","once","threshold","isIntersecting","_this2$node$getProps","onViewportEnter","onViewportLeave","startObserver","_this$node","hasOptionsChanged","_ref$viewport","_ref2$viewport","prevViewport","hasViewportOptionChanged","gestureAnimations","shallowCompare","next","prev","prevLength","resolveVariant","getCurrent","velocity","optimizedAppearDataAttribute","warning","invariant","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","instantAnimationState","isBezierDefinition","easing","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","_slicedToArray","c","d","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","map","calcBezier","t","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","mirrorEasing","reverseEasing","sin","acos","circInOut","backInOut","easingLookup","anticipate","pow","easingDefinitionToFunction","_definition","isColorString","testProp","splitColor","aName","bName","cName","_v$match","match","_v$match2","_defineProperty","rgbUnit","clampRgbUnit","rgba","red","green","blue","_ref$alpha","alpha$1","hex","r","g","parseInt","hsla","hue","saturation","lightness","color","from","to","progress","hueToRgb","q","mixLinearColor","fromExpo","sqrt","colorTypes","asRGBA","find","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","cssVarTokeniser","regex","countKey","colorTokeniser","numberTokeniser","tokenise","_info$values","tokenised","_toConsumableArray","analyseComplexValue","originalValue","toString","numVars","numColors","numNumbers","parseComplexValue","createTransformer","_analyseComplexValue","numValues","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","mixImmediate","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","toFromDifference","mixNumber","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","_ref$clamp","isClamp","inputLength","reverse","interpolator","progressInRange","defaultOffset","arr","remaining","offsetProgress","fillOffset","keyframes","_ref$duration","duration","keyframeValues","times","_ref$ease","easingFunctions","isEasingArray","done","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","calculatedDuration","velocityPerSecond","frameDuration","calcGeneratorVelocity","resolveValue","prevT","safeMin","findSpring","envelope","derivative","_ref$bounce","bounce","_ref$velocity","_ref$mass","mass","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","f","initialGuess","result","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","resolveSpring","restDelta","restSpeed","_getSpringOptions","springOptions","isResolvedFromDuration","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","_ref$power","power","_ref$timeConstant","timeConstant","_ref$bounceDamping","bounceDamping","_ref$bounceStiffness","bounceStiffness","modifyTarget","_ref$restDelta","nearestBoundary","amplitude","ideal","timeReachedBoundary","spring$1","calcDelta","calcLatest","applyFriction","latest","checkCatchBoundary","hasUpdatedFrame","frameloopDriver","passTimestamp","stop","calcGeneratorDuration","generator","Infinity","types","decay","tween","animateValue","resolveFinishedPromise","currentFinishedPromise","animationDriver","_ref$autoplay","autoplay","_ref$delay","delay","_ref$driver","driver","keyframes$1","_ref$type","_ref$repeat","repeat","_ref$repeatDelay","repeatDelay","_ref$repeatType","repeatType","onPlay","onStop","onComplete","onUpdate","speed","hasStopped","updateFinishedPromise","Promise","resolve","mapNumbersToKeyframes","generatorFactory","mirroredGenerator","playState","holdTime","startTime","cancelTime","resolvedDuration","totalDuration","currentTime","tick","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","iterationIsOdd","isAnimationFinished","finish","stopAnimationDriver","play","controls","then","reject","time","newTime","newSpeed","pause","complete","sample","supportsWaapi","memo","Element","acceleratedValues","createAcceleratedAnimation","valueName","_options$duration","requiresPregeneratedKeyframes","sampleAnimation","pregeneratedKeyframes","keyframeOptions","fill","iterations","direction","animateStyle","owner","syncStart","timeline","cancelAnimation","safeCancel","onfinish","getFinalKeyframe","attachTimeline","playbackRate","setWithVelocity","createInstantAnimation","setValue","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isAnimatable","maxDefaults","applyDefaultFilter","_v$slice$split","slice","_v$slice$split2","defaultValue","functionRegex","filter","functions","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","isZeroValueString","isNone","getKeyframes","isTargetAnimatable","defaultOrigin","animatableTemplateValue","noneKeyframeIndexes","isTransitionDefined","when","delayChildren","staggerChildren","staggerDirection","getValueTransition","animateMotionValue","valueTransition","_transition$elapsed","originKeyframe","targetKeyframe","isOriginAnimatable","HTMLElement","acceleratedAnimation","isWillChangeMotionValue","isNumericalString","addUniqueItem","item","removeItem","SubscriptionManager","subscriptions","numSubscriptions","isFloat","collectMotionValues","MotionValue","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","scheduleVelocityCheck","change","notify","velocityChange","renderRequest","velocityCheck","hasAnimated","subscription","on","unsubscribe","getSize","eventManagers","passiveEffect","stopPassiveEffect","startAnimation","_this3","animationStart","animationComplete","clearAnimation","animationCancel","clearListeners","motionValue","testValueType","dimensionValueTypes","findDimensionValueType","valueTypes","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","_ref$transitionEnd","getOriginFromTransition","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","_ref2$delay","transitionOverride","_visualElement$makeTa","_visualElement$makeTa2","willChange","animations","animationTypeState","getState","appearId","shouldReduceMotion","animateVariant","variant","_ref$transition","getAnimation","getChildAnimations","variantChildren","forwardDelay","_transition","_transition$delayChil","animateChildren","_transition2","_ref3","first","last","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","_typeState$prevResolv","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","AnimationFeature","subscribe","updateAnimationControlsSubscription","ExitAnimationFeature","_this$node$presenceCo","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","distance2D","xDelta","yDelta","PanSession","handlers","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","_this$handlers","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","_this$handlers2","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeBox","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","_ref$snapToCursor","snapToCursor","stopAnimation","_this$getProps","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","_this$getProps2","dragDirectionLock","onDirectionLock","onDrag","getCurrentDirection","updateAxis","panSession","getTransformPagePoint","onDragEnd","_this$visualElement","_point","shouldDrag","axisValue","applyConstraints","_this$getProps6","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","_this$getProps7","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","_this$getProps8","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","_this4","dragKey","externalMotionValue","_this5","_projection$layout$la","_this6","_this$getProps9","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","_this6$constraints$ax","_this7","stopPointerListener","_this7$getProps","_this7$getProps$dragL","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","scalePositionWithinConstraints","stopLayoutUpdateListener","hasLayoutChanged","_props$drag","_props$dragDirectionL","_props$dragPropagatio","_props$dragConstraint","_props$dragElastic","_props$dragMomentum","lockThreshold","DragGesture","removeGroupControls","dragControls","addListeners","asyncHandler","PanGesture","removePointerDownListener","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","onPointerDown","updateHandlers","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","_React__default$Compo","correctors","_this$props","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","_this$props2","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","queueMicrotask","currentAnimation","isLead","_this$props3","promoteContext","scheduleCheckAfterUnmount","deregister","React__default","_usePresence","useId","usePresence","_usePresence2","applyTo","boxShadow","borders","numBorders","asNumber","isPx","mixValues","follow","lead","shouldCrossfadeOpacity","isOnlyMember","easeCrossfadeIn","opacityExit","easeCrossfadeOut","borderLabel","followRadius","getRadius","leadRadius","radiusName","compress","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","boxEqualsRounded","aspectRatio","NodeStack","scheduleRender","prevLead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","depth","FlatTree","isDirty","timeout","checkElapsed","record","data","MotionDebug","isSVGElement","SVGElement","transformAxes","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","ProjectionNode","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","hasProjected","isVisible","animationProgress","sharedNodes","path","subscriptionManager","args","_this$options","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","_visualElement$getPro","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","isUpdateBlocked","resetRotation","shouldNotifyListeners","startUpdate","_this$options2","getTransformTemplate","prevTransformTemplateValue","updateSnapshot","notifyListeners","unblockUpdate","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","preRender","clearSnapshot","removeLeadSnapshots","measure","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundBox","measuredBox","boxWithoutScroll","rootScroll","transformOnly","withTransforms","boxWithoutTransform","targetDelta","scheduleUpdateProjection","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","canSkip","attemptToResolveRelativeTarget","_this$options3","getClosestProjectingParent","forceRelativeParentToResolveTarget","relativeTargetOrigin","targetWithTransforms","applyTransform","isProjecting","_this$options4","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionDeltaWithTransform","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","prevRelativeTarget","relativeLayout","snapshotSource","layoutSource","isSharedLayoutAnimation","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","setTargetDelta","mixBox","motionValue$1","animateSingleValue","completeAnimation","exitAnimationComplete","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","hasRotate","resetValues","setStaticValue","styles","visibility","pointerEvents","emptyStyles","valuesToRender","applyTransformsToTarget","_this$projectionDelta","_scaleCorrectors$key","corrected","num","hasListeners","_node$layout","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","removeLeadSnapshot","mixAxis","userAgentContains","string","navigator","userAgent","roundPoint","roundAxis","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","getComputedStyle","position","splitCSSVariableRegex","parseCSSVariable","exec","_match","getVariableValue","_parseCSSVariable","_parseCSSVariable2","fallback","getPropertyValue","trimmed","resolveCSSVariables","obj","TypeError","_objectDestructuringEmpty","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","removeNonTranslationalTransform","removedTransforms","positionalValues","_ref3$paddingLeft","_ref3$paddingRight","_ref4","_ref5","_ref5$paddingTop","_ref5$paddingBottom","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","convertChangedValueTypes","changedKeys","originBbox","elementComputedStyle","targetBbox","jump","unitConversion","hasPositionalKey","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","toType","fromType","numKeyframes","fromIndex","scrollY","pageYOffset","convertedTarget","_ref12","_ref13","scrollTo","checkAndConvertChangedValueTypes","prefersReducedMotion","hasReducedMotionListener","visualElementStore","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","_this$scrapeMotionVal","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","ProjectionNodeConstructor","renderedProps","_excluded2","_featureDefinitions$n","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","getStaticValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getClosestVariantNode","startAtParent","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","valueFromInitial","_this$events$eventNam","_key2","DOMVisualElement","_VisualElement","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","readValue","setBaseTarget","checkTargetForNewValues","parseDomVariant","HTMLVisualElement","_DOMVisualElement","defaultType","computedStyle","childSubscription","textContent","_superPropBase","object","property","getPrototypeOf","_get","Reflect","bind","receiver","base","desc","getOwnPropertyDescriptor","SVGVisualElement","getAttribute","_getPrototypeOf","createDomVisualElement","motion","_ref$forwardMotionPro","baseConfig","createDomMotionConfig"],"sourceRoot":""}